/// <reference types="node" />
import { Readable } from 'stream';
declare type IterateWithoutState = (chunk: any) => {
    action: 'continue';
} | {
    action: 'break';
    unconsumedData?: any;
};
declare type IterateWithState<Acc> = (chunk: any, acc: Acc) => {
    action: 'continue';
    acc: Acc;
} | {
    action: 'break';
    acc: Acc;
    unconsumedData?: any;
};
export declare function loopStream(stream: Readable, iter: IterateWithoutState): Promise<void>;
export declare function loopStream<Acc>(stream: Readable, initialAcc: Acc, iter: IterateWithState<Acc>): Promise<Acc>;
export {};
